"use client";

import Image from "next/image";
import bg from "../../../assets/bg.jpg";
import { useEffect, useState } from "react";
import axios from "axios";
import Link from "next/link";
import { useRouter } from "next/navigation";

const ArtikelPage: React.FC = () => {
  type Article = {
    id: string;
    title: string;
    content: string;
    imageUrl: string | null;
    updatedAt: string;
    category: {
      id: string;
      name: string;
    };
  };

  type Category = {
    id: string;
    name: string;
  };

  const [articles, setArticles] = useState<Article[]>([]);
  const [categories, setCategories] = useState<Category[]>([]);
  const [selectedCategory, setSelectedCategory] = useState<string>("");
  const [searchTerm, setSearchTerm] = useState<string>("");
  const [currentPage, setCurrentPage] = useState<number>(1);
  const [totalPages, setTotalPages] = useState<number>(1);
  const [totalArticles, setTotalArticles] = useState(0);
  const [profile, setProfile] = useState<any>(null);
  const [loading, setLoading] = useState<boolean>(true);
  const router = useRouter();
  useEffect(() => {
    const fetchProfile = async () => {
      try {
        const token = document.cookie
          .split("; ")
          .find((row) => row.startsWith("token="))
          ?.split("=")[1];

        if (!token) {
          alert("You must be logged in to see an articles");
          return;
        }
        const response = await axios.get(
          `${process.env.NEXT_PUBLIC_SELLER}/auth/profile`,
          {
            headers: {
              "Content-Type": "application/json",
              Authorization: `Bearer ${token}`,
            },
          }
        );

        setProfile(response.data);
        setLoading(false);
      } catch (error) {
        console.error("Error fetching profile:", error);
        setLoading(false);
        alert("Failed to load profile. Please login again.");
        router.push("/");
      }
    };

    fetchProfile();
  }, [router]);
  
  useEffect(() => {
    const fetchCategories = async () => {
      try {
        const res = await axios.get(
          `${process.env.NEXT_PUBLIC_SELLER}/categories`
        );
        setCategories(res.data.data);
      } catch (error) {
        console.error("Error fetching categories:", error);
      }
    };
    fetchCategories();
  }, []);

  useEffect(() => {
    const fetchArticles = async () => {
      try {
        const params: any = { page: currentPage, limit: 10 };
        if (selectedCategory) params.category = selectedCategory;
        if (searchTerm) params.title = searchTerm;

        const res = await axios.get(
          `${process.env.NEXT_PUBLIC_SELLER}/articles`,
          { params }
        );
        setArticles(res.data.data);
        setCurrentPage(res.data.page);
        setTotalPages(Math.ceil(res.data.total / res.data.limit));
        setTotalArticles(res.data.total);
      } catch (error) {
        console.error("Error fetching articles:", error);
      }
    };
    fetchArticles();
  }, [selectedCategory, searchTerm, currentPage]);

  const handlePageChange = (page: number) => {
    if (page >= 1 && page <= totalPages) {
      setCurrentPage(page);
    }
  };
  const truncateContent = (content: string, limit: number = 150) => {
    return content.length > limit
      ? content.substring(0, limit) + "..."
      : content;
  };
  const getPageNumbers = () => {
    const pageNumbers = [];
    if (totalPages <= 5) {
      for (let i = 1; i <= totalPages; i++) {
        pageNumbers.push(i);
      }
    } else {
      pageNumbers.push(1);

      if (currentPage > 2) pageNumbers.push("...");

      if (currentPage - 1 > 1) pageNumbers.push(currentPage - 1);
      pageNumbers.push(currentPage);
      if (currentPage + 1 < totalPages) pageNumbers.push(currentPage + 1);

      if (currentPage < totalPages - 1) pageNumbers.push("...");

      pageNumbers.push(totalPages);
    }

    return pageNumbers;
  };

  return (
    <div>
      <div>
        <div className="w-full">
          <div className="flex justify-between bg-white p-4 shadow-md z-20 relative">
            <div className="flex items-center">
              <svg
                width="122"
                height="22"
                viewBox="0 0 122 22"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clipPath="url(#clip0_2013_2794)">
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M0 7.67442V15.8605H2.5523C2.82043 15.8605 3.08594 15.9134 3.33369 16.0163C3.58138 16.1191 3.80652 16.2698 3.99607 16.4599C4.18569 16.6499 4.33611 16.8755 4.43874 17.1238C4.5413 17.3721 4.59414 17.6382 4.59414 17.907V20.4651H10.7197L18.3766 12.7907V4.60465H15.8243C15.5561 4.60465 15.2906 4.55172 15.0429 4.44888C14.7952 4.34603 14.5701 4.19528 14.3805 4.00524C14.1909 3.81521 14.0405 3.58959 13.9378 3.3413C13.8353 3.09302 13.7824 2.8269 13.7824 2.55814V0H7.6569L0 7.67442ZM8.67782 15.3488H5.1046V9.72093L9.69874 5.11628H13.272V10.7442L8.67782 15.3488Z"
                    fill="#0004E8"
                  />
                  <path
                    d="M117.696 6.26538C118.985 6.26538 120.022 6.66445 120.806 7.46259C121.602 8.24809 122 9.35029 122 10.7692V16.9454H119.346V11.1303C119.346 10.3068 119.137 9.67968 118.72 9.24894C118.303 8.80551 117.734 8.58382 117.013 8.58382C116.293 8.58382 115.718 8.80551 115.288 9.24894C114.871 9.67968 114.663 10.3068 114.663 11.1303V16.9454H112.008V11.1303C112.008 10.3068 111.799 9.67968 111.382 9.24894C110.965 8.80551 110.396 8.58382 109.676 8.58382C108.943 8.58382 108.362 8.80551 107.932 9.24894C107.515 9.67968 107.306 10.3068 107.306 11.1303V16.9454H104.652V6.41739H107.306V7.69062C107.647 7.24725 108.083 6.89883 108.614 6.64547C109.158 6.39206 109.752 6.26538 110.396 6.26538C111.218 6.26538 111.951 6.44276 112.596 6.79747C113.241 7.13955 113.74 7.63363 114.093 8.27976C114.435 7.67164 114.928 7.18386 115.572 6.81646C116.23 6.44906 116.938 6.26538 117.696 6.26538Z"
                    fill="#000150"
                  />
                  <path
                    d="M102.696 6.41724V16.9452H100.023V15.6149C99.6817 16.071 99.2325 16.4321 98.6766 16.6981C98.1329 16.9515 97.5388 17.0782 96.894 17.0782C96.0727 17.0782 95.3458 16.9072 94.7139 16.5651C94.0819 16.2104 93.5827 15.6973 93.2162 15.0258C92.8619 14.3417 92.6853 13.5309 92.6853 12.5934V6.41724H95.3397V12.2133C95.3397 13.0495 95.548 13.6956 95.965 14.1517C96.3826 14.5951 96.9512 14.8168 97.6715 14.8168C98.405 14.8168 98.9798 14.5951 99.3968 14.1517C99.8144 13.6956 100.023 13.0495 100.023 12.2133V6.41724H102.696Z"
                    fill="#000150"
                  />
                  <path
                    d="M87.1315 17.1164C86.2719 17.1164 85.5006 16.9643 84.8181 16.6603C84.1356 16.3436 83.5919 15.9191 83.1877 15.387C82.7956 14.8549 82.5807 14.2658 82.543 13.6197H85.2162C85.2668 14.0251 85.4628 14.3609 85.8043 14.6269C86.158 14.893 86.594 15.026 87.1121 15.026C87.618 15.026 88.01 14.9246 88.2877 14.7219C88.5786 14.5192 88.7241 14.2595 88.7241 13.9428C88.7241 13.6007 88.547 13.3473 88.1932 13.1826C87.8517 13.0053 87.302 12.8152 86.5434 12.6125C85.7599 12.4225 85.1152 12.2261 84.6098 12.0234C84.1167 11.8207 83.6869 11.5103 83.3204 11.0923C82.9661 10.6742 82.7895 10.1104 82.7895 9.40093C82.7895 8.81819 82.9539 8.2861 83.2826 7.80465C83.6236 7.32321 84.1039 6.94317 84.7231 6.66444C85.3556 6.38571 86.0947 6.24634 86.9416 6.24634C88.1932 6.24634 89.1917 6.56309 89.9375 7.19653C90.6833 7.81734 91.0942 8.65979 91.1697 9.72403H88.6292C88.5914 9.30592 88.4143 8.97654 88.0983 8.73582C87.7951 8.48246 87.3842 8.35573 86.866 8.35573C86.3857 8.35573 86.0125 8.44444 85.7471 8.62183C85.4944 8.79916 85.3678 9.04622 85.3678 9.36292C85.3678 9.71768 85.545 9.99007 85.8987 10.1801C86.253 10.3575 86.8027 10.5411 87.5485 10.7312C88.3066 10.9212 88.9324 11.1176 89.4255 11.3203C89.9186 11.523 90.3418 11.8397 90.696 12.2704C91.0625 12.6886 91.2519 13.246 91.2647 13.9428C91.2647 14.5509 91.0942 15.0957 90.7527 15.5771C90.4239 16.0585 89.9436 16.4386 89.3117 16.7173C88.6925 16.9834 87.9656 17.1164 87.1315 17.1164Z"
                    fill="#000150"
                  />
                  <path
                    d="M73.5798 7.93768C73.9213 7.45624 74.3889 7.05717 74.983 6.74047C75.5895 6.41108 76.2786 6.24634 77.0494 6.24634C77.9468 6.24634 78.7559 6.46808 79.4766 6.91151C80.2096 7.35488 80.7844 7.98833 81.202 8.81185C81.6318 9.62267 81.8462 10.5665 81.8462 11.6433C81.8462 12.7202 81.6318 13.6767 81.202 14.5129C80.7844 15.3364 80.2096 15.9762 79.4766 16.4322C78.7559 16.8883 77.9468 17.1164 77.0494 17.1164C76.2786 17.1164 75.5961 16.958 75.0019 16.6413C74.4205 16.3245 73.9463 15.9255 73.5798 15.4441V21.9623H70.9254V6.41738H73.5798V7.93768ZM79.1351 11.6433C79.1351 11.0099 79.0024 10.4651 78.737 10.0091C78.4843 9.5403 78.1428 9.18559 77.713 8.94487C77.2959 8.70415 76.8411 8.58381 76.348 8.58381C75.8677 8.58381 75.4129 8.71049 74.983 8.96385C74.5655 9.20457 74.2245 9.55928 73.9591 10.028C73.7064 10.4968 73.5798 11.0479 73.5798 11.6814C73.5798 12.3148 73.7064 12.8659 73.9591 13.3347C74.2245 13.8034 74.5655 14.1645 74.983 14.4179C75.4129 14.6586 75.8677 14.779 76.348 14.779C76.8411 14.779 77.2959 14.6522 77.713 14.3989C78.1428 14.1455 78.4843 13.7844 78.737 13.3157C79.0024 12.8469 79.1351 12.2895 79.1351 11.6433Z"
                    fill="#000150"
                  />
                  <path
                    d="M67.6579 5.16321C67.1904 5.16321 66.7988 5.01751 66.4829 4.72612C66.1791 4.42207 66.0275 4.04833 66.0275 3.60492C66.0275 3.1615 66.1791 2.7941 66.4829 2.50272C66.7988 2.19866 67.1904 2.04663 67.6579 2.04663C68.126 2.04663 68.5114 2.19866 68.8146 2.50272C69.1306 2.7941 69.2889 3.1615 69.2889 3.60492C69.2889 4.04833 69.1306 4.42207 68.8146 4.72612C68.5114 5.01751 68.126 5.16321 67.6579 5.16321ZM68.9662 6.41742V16.9454H66.3119V6.41742H68.9662Z"
                    fill="#000150"
                  />
                  <path
                    d="M59.5488 17.1164C58.5375 17.1164 57.6279 16.8946 56.8188 16.4513C56.0097 15.9952 55.3717 15.3554 54.9036 14.5319C54.4487 13.7084 54.2211 12.7582 54.2211 11.6814C54.2211 10.6045 54.4549 9.65434 54.9225 8.83083C55.4028 8.00736 56.0541 7.37391 56.8755 6.93049C57.6973 6.47442 58.6136 6.24634 59.6248 6.24634C60.636 6.24634 61.5523 6.47442 62.3742 6.93049C63.1955 7.37391 63.8402 8.00736 64.3078 8.83083C64.7881 9.65434 65.0285 10.6045 65.0285 11.6814C65.0285 12.7582 64.782 13.7084 64.2889 14.5319C63.8085 15.3554 63.1516 15.9952 62.317 16.4513C61.4957 16.8946 60.5727 17.1164 59.5488 17.1164ZM59.5488 14.7979C60.0291 14.7979 60.4778 14.6839 60.8954 14.4559C61.3252 14.2151 61.6661 13.8604 61.9188 13.3917C62.172 12.9229 62.2981 12.3528 62.2981 11.6814C62.2981 10.6805 62.0327 9.91404 61.5018 9.38195C60.9837 8.83717 60.3451 8.56478 59.587 8.56478C58.8285 8.56478 58.1904 8.83717 57.6718 9.38195C57.1664 9.91404 56.9138 10.6805 56.9138 11.6814C56.9138 12.6822 57.1598 13.455 57.6529 13.9998C58.1588 14.5319 58.7907 14.7979 59.5488 14.7979Z"
                    fill="#000150"
                  />
                  <path
                    d="M48.1218 17.1164C47.1106 17.1164 46.2005 16.8946 45.3915 16.4513C44.5826 15.9952 43.9442 15.3554 43.4766 14.5319C43.0215 13.7084 42.794 12.7582 42.794 11.6814C42.794 10.6045 43.0279 9.65434 43.4955 8.83083C43.9758 8.00736 44.6268 7.37391 45.4484 6.93049C46.2701 6.47442 47.1864 6.24634 48.1977 6.24634C49.2089 6.24634 50.1253 6.47442 50.9469 6.93049C51.7683 7.37391 52.413 8.00736 52.8806 8.83083C53.361 9.65434 53.6014 10.6045 53.6014 11.6814C53.6014 12.7582 53.3548 13.7084 52.8617 14.5319C52.3814 15.3554 51.7244 15.9952 50.89 16.4513C50.0684 16.8946 49.1457 17.1164 48.1218 17.1164ZM48.1218 14.7979C48.6021 14.7979 49.0508 14.6839 49.468 14.4559C49.8977 14.2151 50.239 13.8604 50.4918 13.3917C50.7446 12.9229 50.871 12.3528 50.871 11.6814C50.871 10.6805 50.6056 9.91404 50.0747 9.38195C49.5564 8.83717 48.9181 8.56478 48.1597 8.56478C47.4013 8.56478 46.763 8.83717 46.2447 9.38195C45.7392 9.91404 45.4863 10.6805 45.4863 11.6814C45.4863 12.6822 45.7328 13.455 46.2258 13.9998C46.7314 14.5319 47.3634 14.7979 48.1218 14.7979Z"
                    fill="#000150"
                  />
                  <path
                    d="M36.6946 17.1164C35.6834 17.1164 34.7734 16.8946 33.9644 16.4513C33.1554 15.9952 32.5171 15.3554 32.0494 14.5319C31.5944 13.7084 31.3669 12.7582 31.3669 11.6814C31.3669 10.6045 31.6007 9.65434 32.0684 8.83083C32.5487 8.00736 33.1997 7.37391 34.0213 6.93049C34.8428 6.47442 35.7593 6.24634 36.7705 6.24634C37.7817 6.24634 38.6981 6.47442 39.5197 6.93049C40.3413 7.37391 40.9859 8.00736 41.4536 8.83083C41.934 9.65434 42.1741 10.6045 42.1741 11.6814C42.1741 12.7582 41.9276 13.7084 41.4347 14.5319C40.9543 15.3554 40.2971 15.9952 39.4628 16.4513C38.6412 16.8946 37.7185 17.1164 36.6946 17.1164ZM36.6946 14.7979C37.175 14.7979 37.6237 14.6839 38.0408 14.4559C38.4706 14.2151 38.8119 13.8604 39.0647 13.3917C39.3174 12.9229 39.4439 12.3528 39.4439 11.6814C39.4439 10.6805 39.1784 9.91404 38.6475 9.38195C38.1293 8.83717 37.491 8.56478 36.7326 8.56478C35.9742 8.56478 35.3358 8.83717 34.8176 9.38195C34.312 9.91404 34.0592 10.6805 34.0592 11.6814C34.0592 12.6822 34.3057 13.455 34.7986 13.9998C35.3043 14.5319 35.9363 14.7979 36.6946 14.7979Z"
                    fill="#000150"
                  />
                  <path
                    d="M26.646 14.836H31.0069V16.9453H23.9916V3.68091H26.646V14.836Z"
                    fill="#000150"
                  />
                  <path
                    d="M43.4944 18.3595C44.1668 20.3637 46.0566 21.8073 48.2828 21.8073H48.5598C51.3492 21.8073 53.6106 19.5408 53.6106 16.745V16.459H50.8723V16.745C50.8723 18.0251 49.8369 19.0628 48.5598 19.0628H48.2828C47.6319 19.0628 47.0438 18.7933 46.6236 18.3595H43.4944Z"
                    fill="#000150"
                  />
                </g>
                <defs>
                  <clipPath id="clip0_2013_2794">
                    <rect width="122" height="22" fill="white" />
                  </clipPath>
                </defs>
              </svg>
            </div>
            <div className="space-x-5 flex items-center">
              <a href="/profile">
                <div className="">
                  <div
                    className="w-8 h-8 md:w-10 md:h-10 flex items-center justify-center text-xl font-bold text-white rounded-full"
                    style={{
                      backgroundColor: "#BFDBFE",
                      color: "#1E3A8A",
                    }}
                  >
                    {profile?.username
                      ? profile.username.charAt(0).toUpperCase()
                      : "N/A"}
                  </div>
                </div>
              </a>
            </div>
          </div>
          <div className="relative w-full">
            <div
              className="absolute inset-0 bg-cover bg-center bg-opacity-70 md:h-[500px]"
              style={{ backgroundImage: `url(${bg.src})` }}
            ></div>
            <div className="absolute inset-0 bg-[#2563EB] opacity-[0.86] md:h-[500px]"></div>
            <div className="relative z-10 text-center py-[117px] px-4">
              <div className="font-bold text-[14px] text-white">
                Blog genzet
              </div>
              <div className="text-[36px] font-normal text-white mt-2 max-w-md">
                The Journal : Design Resources, Interviews, and Industry News
              </div>
              <div className="text-[20px] text-white mt-2">
                Your daily dose of design insights!
              </div>
              <div className="mt-10 grid gap-4 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-2 w-full max-w-xl mx-auto bg-[#3B82F6] p-2 rounded-lg">
                <div className="bg-white rounded-lg shadow-md p-1">
                  <select
                    className="w-full outline-none text-gray-700 p-2"
                    value={selectedCategory}
                    onChange={(e) => setSelectedCategory(e.target.value)}
                  >
                    <option value="">Select category</option>
                    {categories.map((cat) => (
                      <option key={cat.id} value={cat.id}>
                        {cat.name}
                      </option>
                    ))}
                  </select>
                </div>
                <div className="bg-white rounded-lg shadow-md p-1">
                  <input
                    type="text"
                    placeholder="Search articles"
                    className="w-full outline-none text-gray-700 p-2"
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
        <div></div>
        <div className="z-10 mt-10 px-2">
          {/* Grid for Articles */}
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 md:px-[100px] md:pt-10">
            {articles.map((article) => (
              <Link href={`/detailArtikel/${article.id}`} key={article.id}>
                <div className="bg-white rounded-lg shadow flex-col justify-between p-4 space-y-2 h-full">
                  {/* Article Image */}
                  <div className="w-full h-[200px] bg-gray-300 flex items-center justify-center rounded-lg overflow-hidden">
                    {article.imageUrl && article.imageUrl.trim() !== "" ? (
                      <Image
                        src={article.imageUrl}
                        alt={article.title}
                        width={300}
                        height={200}
                        className="object-cover w-full h-full"
                        unoptimized
                      />
                    ) : (
                      <span className="text-gray-600">No Image</span>
                    )}
                  </div>
                  <div className="text-xs text-gray-400">
                    {new Date(article.updatedAt).toLocaleDateString("en-US", {
                      year: "numeric",
                      month: "long",
                      day: "numeric",
                    })}
                  </div>
                  <div className="font-bold text-lg">{article.title}</div>
                  <div className="text-sm text-gray-700">
                    {truncateContent(article.content)}
                  </div>
                  <div className="text-xs text-[#1E3A8A] bg-[#BFDBFE] p-1 inline-block rounded-xl">
                    {article.category.name}
                  </div>
                </div>
              </Link>
            ))}
          </div>
          <div className="flex justify-center space-x-4 p-4 items-center bg-white">
            <div className="flex items-center">
              <div>
                <svg
                  width="7"
                  height="10"
                  viewBox="0 0 7 10"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M5.5 1L1.5 5L5.5 9"
                    stroke="#0F172A"
                    strokeWidth="1.5"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </svg>
              </div>
              <div>
                <button
                  onClick={() => handlePageChange(currentPage - 1)}
                  disabled={currentPage === 1}
                  className={`px-3 py-1 rounded ${
                    currentPage === 1 ? "cursor-not-allowed" : ""
                  }`}
                >
                  Previous
                </button>
              </div>
            </div>

            <div className="flex items-center space-x-2">
              {getPageNumbers().map((page, index) =>
                page === "..." ? (
                  <span key={index} className="text-sm text-gray-700">
                    ...
                  </span>
                ) : (
                  <button
                    key={index}
                    onClick={() => handlePageChange(page as number)}
                    className={`px-3 py-1 rounded ${
                      page === currentPage
                        ? "bg-white border border-gray-200"
                        : ""
                    }`}
                  >
                    {page}
                  </button>
                )
              )}
            </div>
            <div className="flex items-center">
              <div>
                {" "}
                <button
                  onClick={() => handlePageChange(currentPage + 1)}
                  disabled={currentPage === totalPages}
                  className={`px-3 py-1 rounded ${
                    currentPage === totalPages ? "cursor-not-allowed" : ""
                  }`}
                >
                  Next
                </button>
              </div>
              <div>
                <svg
                  width="7"
                  height="10"
                  viewBox="0 0 7 10"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M1.5 9L5.5 5L1.5 1"
                    stroke="#0F172A"
                    strokeWidth="1.5"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                  />
                </svg>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div className="footer md:mt-10">
        <div className="bg-[#2563EBDB] flex justify-center p-4 md:p-8 gap-2 md:gap-4">
          <div>
            <svg
              viewBox="0 0 134 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className="w-[100px] h-[50px] md:w-[134px] md:h-[24px]"
            >
              <g clipPath="url(#clip0_2013_1599)">
                <path
                  fillRule="evenodd"
                  clipRule="evenodd"
                  d="M0 8.37209V17.3023H2.7907C3.08387 17.3023 3.37418 17.3601 3.64508 17.4723C3.9159 17.5845 4.16206 17.7489 4.36932 17.9562C4.57665 18.1635 4.74112 18.4097 4.85334 18.6805C4.96548 18.9514 5.02326 19.2417 5.02326 19.5349V22.3256H11.7209L20.093 13.9535V5.02326H17.3023C17.0091 5.02326 16.7188 4.96552 16.4479 4.85332C16.1771 4.74112 15.931 4.57667 15.7237 4.36936C15.5164 4.16205 15.3519 3.91592 15.2397 3.64506C15.1275 3.3742 15.0698 3.08389 15.0698 2.7907V0H8.37209L0 8.37209ZM9.48837 16.7442H5.5814V10.6047L10.6047 5.5814H14.5116V11.7209L9.48837 16.7442Z"
                  fill="white"
                />
                <path
                  d="M128.689 6.83496C130.099 6.83496 131.233 7.27031 132.089 8.14101C132.96 8.99792 133.395 10.2003 133.395 11.7482V18.4858H130.493V12.1421C130.493 11.2438 130.265 10.5596 129.809 10.0898C129.353 9.60601 128.731 9.36417 127.943 9.36417C127.155 9.36417 126.526 9.60601 126.056 10.0898C125.6 10.5596 125.373 11.2438 125.373 12.1421V18.4858H122.47V12.1421C122.47 11.2438 122.242 10.5596 121.786 10.0898C121.33 9.60601 120.708 9.36417 119.92 9.36417C119.119 9.36417 118.483 9.60601 118.013 10.0898C117.557 10.5596 117.329 11.2438 117.329 12.1421V18.4858H114.426V7.00078H117.329V8.38977C117.702 7.90609 118.179 7.52599 118.759 7.2496C119.354 6.97316 120.003 6.83496 120.708 6.83496C121.606 6.83496 122.408 7.02847 123.113 7.41543C123.818 7.7886 124.364 8.32759 124.75 9.03247C125.124 8.36906 125.663 7.83693 126.367 7.43613C127.086 7.03533 127.86 6.83496 128.689 6.83496Z"
                  fill="white"
                />
                <path
                  d="M112.288 7.00049V18.4855H109.365V17.0343C108.992 17.5319 108.501 17.9258 107.893 18.216C107.299 18.4924 106.649 18.6307 105.944 18.6307C105.046 18.6307 104.252 18.4441 103.561 18.0709C102.87 17.6839 102.324 17.1242 101.923 16.3917C101.536 15.6453 101.343 14.7609 101.343 13.7381V7.00049H104.245V13.3235C104.245 14.2357 104.473 14.9405 104.929 15.4381C105.385 15.9218 106.007 16.1636 106.794 16.1636C107.596 16.1636 108.225 15.9218 108.681 15.4381C109.138 14.9405 109.365 14.2357 109.365 13.3235V7.00049H112.288Z"
                  fill="white"
                />
                <path
                  d="M95.2699 18.6722C94.33 18.6722 93.4867 18.5063 92.7404 18.1746C91.9942 17.8291 91.3998 17.3661 90.9577 16.7856C90.5291 16.2052 90.2941 15.5625 90.2528 14.8576H93.1758C93.231 15.2999 93.4454 15.6662 93.8188 15.9564C94.2055 16.2466 94.6822 16.3917 95.2487 16.3917C95.8018 16.3917 96.2305 16.2812 96.5341 16.06C96.8522 15.8389 97.0113 15.5556 97.0113 15.2101C97.0113 14.8369 96.8176 14.5605 96.4309 14.3808C96.0575 14.1874 95.4563 13.98 94.6269 13.7589C93.7702 13.5516 93.0653 13.3374 92.5127 13.1163C91.9735 12.8951 91.5036 12.5565 91.1029 12.1004C90.7155 11.6443 90.5224 11.0293 90.5224 10.2553C90.5224 9.61962 90.7021 9.03916 91.0615 8.51395C91.4344 7.98874 91.9596 7.57415 92.6366 7.27008C93.3282 6.966 94.1363 6.81396 95.0623 6.81396C96.4309 6.81396 97.5226 7.15951 98.338 7.85054C99.1535 8.52779 99.6028 9.44682 99.6854 10.6078H96.9075C96.8662 10.1517 96.6725 9.79236 96.327 9.52976C95.9955 9.25337 95.5462 9.11512 94.9797 9.11512C94.4545 9.11512 94.0465 9.2119 93.7562 9.40541C93.48 9.59886 93.3415 9.86838 93.3415 10.2139C93.3415 10.6009 93.5352 10.898 93.922 11.1053C94.3094 11.2988 94.9105 11.4992 95.7259 11.7065C96.5548 11.9139 97.239 12.1281 97.7782 12.3492C98.3174 12.5703 98.7801 12.9158 99.1674 13.3857C99.5682 13.8418 99.7752 14.4499 99.7892 15.2101C99.7892 15.8735 99.6028 16.4678 99.2294 16.993C98.8699 17.5181 98.3447 17.9328 97.6537 18.2368C96.9767 18.5271 96.1819 18.6722 95.2699 18.6722Z"
                  fill="white"
                />
                <path
                  d="M80.4524 8.65906C80.8258 8.13385 81.3371 7.6985 81.9868 7.35302C82.6498 6.99369 83.4033 6.81396 84.2461 6.81396C85.2273 6.81396 86.112 7.05586 86.9001 7.5396C87.7016 8.02329 88.33 8.71432 88.7866 9.6127C89.2565 10.4972 89.4909 11.5268 89.4909 12.7016C89.4909 13.8764 89.2565 14.9198 88.7866 15.832C88.33 16.7304 87.7016 17.4283 86.9001 17.9259C86.112 18.4234 85.2273 18.6722 84.2461 18.6722C83.4033 18.6722 82.6571 18.4994 82.0074 18.1539C81.3717 17.8084 80.8532 17.373 80.4524 16.8479V23.9586H77.5501V7.00055H80.4524V8.65906ZM86.5267 12.7016C86.5267 12.0106 86.3815 11.4163 86.0913 10.9187C85.815 10.4074 85.4416 10.0204 84.9717 9.75782C84.5157 9.49521 84.0184 9.36394 83.4792 9.36394C82.954 9.36394 82.4567 9.50213 81.9868 9.77852C81.5302 10.0411 81.1574 10.4281 80.8671 10.9395C80.5909 11.4508 80.4524 12.052 80.4524 12.7431C80.4524 13.4341 80.5909 14.0353 80.8671 14.5467C81.1574 15.0581 81.5302 15.452 81.9868 15.7283C82.4567 15.991 82.954 16.1223 83.4792 16.1223C84.0184 16.1223 84.5157 15.984 84.9717 15.7076C85.4416 15.4312 85.815 15.0373 86.0913 14.5259C86.3815 14.0146 86.5267 13.4065 86.5267 12.7016Z"
                  fill="white"
                />
                <path
                  d="M73.9775 5.63233C73.4662 5.63233 73.0381 5.47338 72.6926 5.1555C72.3605 4.82381 72.1948 4.4161 72.1948 3.93237C72.1948 3.44865 72.3605 3.04785 72.6926 2.72997C73.0381 2.39827 73.4662 2.23242 73.9775 2.23242C74.4893 2.23242 74.9107 2.39827 75.2422 2.72997C75.5877 3.04785 75.7607 3.44865 75.7607 3.93237C75.7607 4.4161 75.5877 4.82381 75.2422 5.1555C74.9107 5.47338 74.4893 5.63233 73.9775 5.63233ZM75.408 7.00055V18.4856H72.5057V7.00055H75.408Z"
                  fill="white"
                />
                <path
                  d="M65.1109 18.6722C64.0052 18.6722 63.0106 18.4303 62.126 17.9466C61.2413 17.449 60.5436 16.7511 60.0318 15.8528C59.5345 14.9544 59.2856 13.9179 59.2856 12.7431C59.2856 11.5683 59.5412 10.5318 60.0525 9.63341C60.5777 8.73508 61.2899 8.04405 62.1879 7.56031C63.0865 7.06278 64.0884 6.81396 65.194 6.81396C66.2997 6.81396 67.3016 7.06278 68.2002 7.56031C69.0982 8.04405 69.8032 8.73508 70.3144 9.63341C70.8396 10.5318 71.1025 11.5683 71.1025 12.7431C71.1025 13.9179 70.8329 14.9544 70.2938 15.8528C69.7686 16.7511 69.0502 17.449 68.1377 17.9466C67.2396 18.4303 66.2305 18.6722 65.1109 18.6722ZM65.1109 16.143C65.6361 16.143 66.1267 16.0186 66.5833 15.7698C67.0532 15.5072 67.426 15.1203 67.7023 14.6089C67.9792 14.0975 68.117 13.4756 68.117 12.7431C68.117 11.6512 67.8268 10.8151 67.2463 10.2346C66.6798 9.64033 65.9816 9.34317 65.1527 9.34317C64.3234 9.34317 63.6257 9.64033 63.0586 10.2346C62.506 10.8151 62.2298 11.6512 62.2298 12.7431C62.2298 13.8349 62.4988 14.678 63.038 15.2723C63.5911 15.8528 64.282 16.143 65.1109 16.143Z"
                  fill="white"
                />
                <path
                  d="M52.6166 18.6722C51.5109 18.6722 50.5159 18.4303 49.6313 17.9466C48.7468 17.449 48.0489 16.7511 47.5375 15.8528C47.04 14.9544 46.7912 13.9179 46.7912 12.7431C46.7912 11.5683 47.0469 10.5318 47.5583 9.63341C48.0834 8.73508 48.7952 8.04405 49.6935 7.56031C50.5919 7.06278 51.5939 6.81396 52.6996 6.81396C53.8052 6.81396 54.8072 7.06278 55.7056 7.56031C56.6037 8.04405 57.3087 8.73508 57.8199 9.63341C58.3451 10.5318 58.608 11.5683 58.608 12.7431C58.608 13.9179 58.3384 14.9544 57.7993 15.8528C57.2741 16.7511 56.5557 17.449 55.6433 17.9466C54.745 18.4303 53.7361 18.6722 52.6166 18.6722ZM52.6166 16.143C53.1418 16.143 53.6324 16.0186 54.0885 15.7698C54.5584 15.5072 54.9316 15.1203 55.208 14.6089C55.4844 14.0975 55.6226 13.4756 55.6226 12.7431C55.6226 11.6512 55.3324 10.8151 54.7519 10.2346C54.1853 9.64033 53.4873 9.34317 52.6581 9.34317C51.8289 9.34317 51.1309 9.64033 50.5642 10.2346C50.0114 10.8151 49.735 11.6512 49.735 12.7431C49.735 13.8349 50.0045 14.678 50.5435 15.2723C51.0964 15.8528 51.7874 16.143 52.6166 16.143Z"
                  fill="white"
                />
                <path
                  d="M40.1221 18.6722C39.0164 18.6722 38.0214 18.4303 37.1368 17.9466C36.2523 17.449 35.5543 16.7511 35.043 15.8528C34.5455 14.9544 34.2967 13.9179 34.2967 12.7431C34.2967 11.5683 34.5524 10.5318 35.0637 9.63341C35.5889 8.73508 36.3007 8.04405 37.199 7.56031C38.0973 7.06278 39.0994 6.81396 40.205 6.81396C41.3107 6.81396 42.3127 7.06278 43.211 7.56031C44.1094 8.04405 44.8142 8.73508 45.3256 9.63341C45.8508 10.5318 46.1134 11.5683 46.1134 12.7431C46.1134 13.9179 45.8439 14.9544 45.3049 15.8528C44.7797 16.7511 44.061 17.449 43.1488 17.9466C42.2505 18.4303 41.2416 18.6722 40.1221 18.6722ZM40.1221 16.143C40.6473 16.143 41.1379 16.0186 41.594 15.7698C42.0639 15.5072 42.4371 15.1203 42.7135 14.6089C42.9899 14.0975 43.1281 13.4756 43.1281 12.7431C43.1281 11.6512 42.8379 10.8151 42.2574 10.2346C41.6908 9.64033 40.9928 9.34317 40.1636 9.34317C39.3343 9.34317 38.6364 9.64033 38.0697 10.2346C37.5169 10.8151 37.2405 11.6512 37.2405 12.7431C37.2405 13.8349 37.51 14.678 38.049 15.2723C38.6018 15.8528 39.2929 16.143 40.1221 16.143Z"
                  fill="white"
                />
                <path
                  d="M29.1349 16.1848H33.9031V18.4859H26.2325V4.01562H29.1349V16.1848Z"
                  fill="white"
                />
                <path
                  d="M47.5569 20.0284C48.2921 22.2147 50.3585 23.7896 52.7926 23.7896H53.0955C56.1455 23.7896 58.618 21.3171 58.618 18.2671V17.9551H55.624V18.2671C55.624 19.6636 54.4919 20.7956 53.0955 20.7956H52.7926C52.0809 20.7956 51.4379 20.5016 50.9784 20.0284H47.5569Z"
                  fill="white"
                />
              </g>
              <defs>
                <clipPath id="clip0_2013_1599">
                  <rect width="133.395" height="24" fill="white" />
                </clipPath>
              </defs>
            </svg>
          </div>
          <div className="text-white text-[10px] flex items-center text-center">
            © 2025 Blog genzet. All rights reserved.
          </div>
        </div>
      </div>
    </div>
  );
};

export default ArtikelPage;
